* Introduction

Clojure is a modern, functional lisp with a fiercely convinced community and
production orientation.

It is a pile of "just get shit done" and produces small, robust and simple code.

s key feature of lisps is that interactivity is foundational.
The magic of making your source code come alive under your fingers is
not describable via words, rather it has to be experienced.

Beyond it being a lisp, it has a unique a approach to functional
programming. Firstly by putting a strong emphasis on data orientation,
secondly by being a dynamically typed (not typical for functional
languages),
and thirdly by fully embracing the need of state in your program.
It provides strong, and useful state primitives called managed references.
It is typical that a clojure program ends up with less than a handful
of these stateful parts.

The doinant idiomatic style of Clojure, that has developed in recent
years, has been dubbed ~data-oriented-programming~.
It is truly unique, enabling and is said to bring back the joy of programming.

* Emacs

https://github.com/benjamin-asdf/simple-easy-emacs

* Other such lists
